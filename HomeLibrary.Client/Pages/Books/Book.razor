@page "/book/{bookId:int}"
@if(BookDto == null)
{
    <MudProgressLinear Color="Color.Primary" Class="my-5" Indeterminate="true"></MudProgressLinear>
}
else
{
    <dl>
        <dd><MudText>@BookDto.Title</MudText></dd>
        <dt>Authors</dt>
        <dd>
            @foreach (var author in BookDto.Authors)
            {
            <MudText Class="d-inline-block pa-2" Typo="Typo.body1">@author.FullName</MudText>
            }
        </dd>
        <dt>ISBN</dt>
        <dd>@BookDto.ISBN</dd>
        <dt>Publish date</dt>
        <dd>@BookDto.PublishDate</dd>
        <dt>Number of pages</dt>
        <dd>@BookDto.NumberOfPages</dd>
        <dt>Tags</dt>
        <dd>
            <MudChipSet>
                @foreach (var tag in BookDto.Tags)
                {
                    <MudChip Text="@tag.Name"></MudChip>
                }
            </MudChipSet>
        </dd>
        <dt>Images</dt>
        <dd>
            <MudGrid>
                @foreach (var image in BookDto.Images)
                {
                <MudItem xs="3">
                    <MudCardMedia Image="@image.Url" Height="200"></MudCardMedia>
                </MudItem>
                }
            </MudGrid>
        </dd>
    </dl>
}

@code {
    [Parameter]
    public int BookId { get; set; }
    [Inject]
    public BookClient BookClient { get; set; }

    public BookDto BookDto { get; set; }

    protected override async Task OnInitializedAsync()
    {
        BookDto = await BookClient.GetById(BookId);
    }
}
